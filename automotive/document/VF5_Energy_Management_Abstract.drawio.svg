<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background: transparent; background-color: transparent; color-scheme: light dark;" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1447px" height="752px" viewBox="-0.5 -0.5 1447 752" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36&quot; version=&quot;28.2.0&quot;&gt;&#10;  &lt;diagram name=&quot;Trang-1&quot; id=&quot;hUvuoFNU9rQ5R1lBmEG5&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;3143&quot; dy=&quot;1249&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-2&quot; value=&quot;&amp;lt;div&amp;gt;&amp;amp;lt;&amp;amp;lt;abstract class&amp;amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;class ModeEnergyConsumer&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#00CC00;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;150&quot; y=&quot;70&quot; width=&quot;310&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-3&quot; value=&quot;&amp;lt;div&amp;gt;public:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual float GetEnergyConsumptionRate() const = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual std::string GetNodeName() const = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual ~ModeEnergyConsumer() {}&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-2&quot;&gt;&#10;          &lt;mxGeometry y=&quot;30&quot; width=&quot;310&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-6&quot; value=&quot;EcoMode&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#99FF99;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;250&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-7&quot; value=&quot;normalMode&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#99FF99;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;243.25&quot; y=&quot;250&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-8&quot; value=&quot;sportMode&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#99FF99;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;430&quot; y=&quot;250&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-9&quot; value=&quot;class Environment&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#00CC00;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;110&quot; y=&quot;360&quot; width=&quot;530&quot; height=&quot;220&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-10&quot; value=&quot;&amp;lt;div&amp;gt;private:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; TerrainType terrain;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; float temperature; /*in Celsius*/&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-9&quot;&gt;&#10;          &lt;mxGeometry y=&quot;30&quot; width=&quot;530&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-11&quot; value=&quot;&amp;lt;div&amp;gt;public:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Environment(TerrainType terrain_type, float temp) : terrain(terrain_type), temperature(temp) {}&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;float GetTerrainFactor() const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;float GetTemperatureFactor() const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;float TemperatureImpactPercent() const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;float TerrainImpactPercent() const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;float GetOverallFactor() const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;std::string GetTerrainName() const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;float GetTemperature() const&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-9&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;530&quot; height=&quot;140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-13&quot; value=&quot;&amp;amp;lt;&amp;amp;lt;interface&amp;amp;gt;&amp;amp;gt;&amp;lt;div&amp;gt;IPrintTable&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#00CC00;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-730&quot; y=&quot;70&quot; width=&quot;760&quot; height=&quot;140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-14&quot; value=&quot;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;public:&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual void PrintBatteryStatus(float CurrentBattery, float BatteryPercentage, float EstimateDistance) const = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual void PrintModeEnergyConsumerInfo(float distance, float speed, const ModeEnergyConsumer&amp;amp;amp; mode, float consumption) const = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual void PrintlowBatteryWarning() const = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual void PrintEnvironent(std::string terr, float terrper, float temp, float tempper) const = 0;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; virtual ~IPrintTable() {}&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-13&quot;&gt;&#10;          &lt;mxGeometry y=&quot;30&quot; width=&quot;760&quot; height=&quot;110&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-17&quot; value=&quot;StatusPrinter&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#99FF99;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-410&quot; y=&quot;250&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-18&quot; value=&quot;class Battery&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#00CC00;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-600&quot; y=&quot;360&quot; width=&quot;500&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-19&quot; value=&quot;&amp;lt;div&amp;gt;private:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; float capacity;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; float currentCharge;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-18&quot;&gt;&#10;          &lt;mxGeometry y=&quot;30&quot; width=&quot;500&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-20&quot; value=&quot;&amp;lt;div&amp;gt;public:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Battery(float capacity_value) : capacity(capacity_value), currentCharge(capacity_value) {}&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;void ConsumedEnergy(float amount)&amp;lt;span style=&amp;quot;background-color: transparent;&amp;quot;&amp;gt;float GetRemainingBattery() const&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; float GetRemainingBatteryPercentage() const&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; float GetRemainingDistance(float consumptionRate) const&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; void Recharge(float amount)&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; bool IsBatteryLow() const&amp;amp;nbsp;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-18&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;500&quot; height=&quot;110&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-22&quot; value=&quot;class VF5_EnergyManagementSystem&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;strokeColor=#009900;fillColor=#00CC00;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-400&quot; y=&quot;640&quot; width=&quot;790&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-23&quot; value=&quot;&amp;lt;div&amp;gt;private:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Battery VF5_Battery;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; std::unique_ptr&amp;amp;lt;ModeEnergyConsumer&amp;amp;gt; VF5_CurrentMode;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; std::unique_ptr&amp;amp;lt;IPrintTable&amp;amp;gt; VF5_Printer;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; float distance =0;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-22&quot;&gt;&#10;          &lt;mxGeometry y=&quot;30&quot; width=&quot;790&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-24&quot; value=&quot;&amp;lt;div&amp;gt;public:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; VF5_EnergyManagementSystem(float VF5_Battery_capacity, std::unique_ptr&amp;amp;lt;IPrintTable&amp;amp;gt; printer)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; : VF5_Battery(VF5_Battery_capacity), VF5_CurrentMode(std::make_unique&amp;amp;lt;normalMode&amp;amp;gt;()), VF5_Printer(std::move(printer)) {};&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; void VF5_Drive(float SpeedKmH, float SecondsDuration, Environment env = Environment(TerrainType::Flat,25.0))&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=#009900;fillColor=#99FF99;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;yPnP6qVamKMCWSBkKlpN-22&quot;&gt;&#10;          &lt;mxGeometry y=&quot;110&quot; width=&quot;790&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-27&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-3&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-6&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-28&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-3&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-8&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-29&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitX=0.495;exitY=1.01;exitDx=0;exitDy=0;exitPerimeter=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-3&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-7&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;300&quot; y=&quot;170&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;510&quot; y=&quot;235&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-30&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-17&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-350&quot; y=&quot;210&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-360&quot; y=&quot;259&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-350&quot; y=&quot;220&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-350&quot; y=&quot;220&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-33&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.152;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.641;entryY=0.981;entryDx=0;entryDy=0;entryPerimeter=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-22&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-20&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;-110&quot; y=&quot;510&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-60&quot; y=&quot;460&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-34&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.75;exitY=0;exitDx=0;exitDy=0;entryX=0.155;entryY=1.001;entryDx=0;entryDy=0;entryPerimeter=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-22&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-11&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;100&quot; y=&quot;600&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;150&quot; y=&quot;550&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-36&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.25;entryDx=0;entryDy=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-23&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;670&quot; y=&quot;710&quot; /&gt;&#10;              &lt;mxPoint x=&quot;670&quot; y=&quot;95&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;yPnP6qVamKMCWSBkKlpN-39&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=-0.001;entryY=0.137;entryDx=0;entryDy=0;entryPerimeter=0;strokeColor=#009900;fillColor=#99FF99;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;yPnP6qVamKMCWSBkKlpN-23&quot; target=&quot;yPnP6qVamKMCWSBkKlpN-13&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-760&quot; y=&quot;710&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-760&quot; y=&quot;89&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="yPnP6qVamKMCWSBkKlpN-2"><g><path d="M 917 30 L 917 0 L 1227 0 L 1227 30" fill="#00cc00" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 204, 0), rgb(0, 162, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 917 30 L 917 100 L 1227 100 L 1227 30" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 917 30 L 1227 30" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 308px; height: 1px; padding-top: 15px; margin-left: 918px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>&lt;&lt;abstract class&gt;&gt;</div>class ModeEnergyConsumer</div></div></div></foreignObject><text x="1072" y="19" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt;abstract class&gt;&gt;class ModeEnergyConsumer</text></switch></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-3"><g><rect x="917" y="30" width="310" height="70" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 300px; height: 1px; padding-top: 65px; margin-left: 923px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 66px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>public:</div><div>    virtual float GetEnergyConsumptionRate() const = 0;</div><div>    virtual std::string GetNodeName() const = 0;</div><div>    virtual ~ModeEnergyConsumer() {}</div></div></div></div></foreignObject><text x="923" y="69" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">public:...</text></switch></g></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-6"><g><rect x="827" y="180" width="120" height="60" rx="9" ry="9" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 210px; margin-left: 828px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">EcoMode</div></div></div></foreignObject><text x="887" y="214" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">EcoMode</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-7"><g><rect x="1010.25" y="180" width="120" height="60" rx="9" ry="9" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 210px; margin-left: 1011px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">normalMode</div></div></div></foreignObject><text x="1070" y="214" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">normalMode</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-8"><g><rect x="1197" y="180" width="120" height="60" rx="9" ry="9" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 210px; margin-left: 1198px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">sportMode</div></div></div></foreignObject><text x="1257" y="214" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">sportMode</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-9"><g><path d="M 877 320 L 877 290 L 1407 290 L 1407 320" fill="#00cc00" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 204, 0), rgb(0, 162, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 877 320 L 877 510 L 1407 510 L 1407 320" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 877 320 L 1407 320" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 528px; height: 1px; padding-top: 305px; margin-left: 878px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">class Environment</div></div></div></foreignObject><text x="1142" y="309" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">class Environment</text></switch></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-10"><g><rect x="877" y="320" width="530" height="50" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 345px; margin-left: 883px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 46px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>private:</div><div>    TerrainType terrain;</div><div>    float temperature; /*in Celsius*/</div></div></div></div></foreignObject><text x="883" y="349" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">private:...</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-11"><g><rect x="877" y="370" width="530" height="140" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 440px; margin-left: 883px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 136px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>public:</div><div>    Environment(TerrainType terrain_type, float temp) : terrain(terrain_type), temperature(temp) {}</div><div>    float GetTerrainFactor() const</div><div>    float GetTemperatureFactor() const</div><div>    float TemperatureImpactPercent() const</div><div>    float TerrainImpactPercent() const</div><div>    float GetOverallFactor() const</div><div>    std::string GetTerrainName() const</div><div>    float GetTemperature() const</div></div></div></div></foreignObject><text x="883" y="444" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">public:...</text></switch></g></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-13"><g><path d="M 37 30 L 37 0 L 797 0 L 797 30" fill="#00cc00" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 204, 0), rgb(0, 162, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 37 30 L 37 140 L 797 140 L 797 30" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 37 30 L 797 30" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 758px; height: 1px; padding-top: 15px; margin-left: 38px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">&lt;&lt;interface&gt;&gt;<div>IPrintTable</div></div></div></div></foreignObject><text x="417" y="19" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt;interface&gt;&gt;...</text></switch></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-14"><g><rect x="37" y="30" width="760" height="110" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 750px; height: 1px; padding-top: 85px; margin-left: 43px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 106px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));">public:</span></div><div>    virtual void PrintBatteryStatus(float CurrentBattery, float BatteryPercentage, float EstimateDistance) const = 0;</div><div>    virtual void PrintModeEnergyConsumerInfo(float distance, float speed, const ModeEnergyConsumer&amp; mode, float consumption) const = 0;</div><div>    virtual void PrintlowBatteryWarning() const = 0;</div><div>    virtual void PrintEnvironent(std::string terr, float terrper, float temp, float tempper) const = 0;</div><div>    virtual ~IPrintTable() {}</div></div></div></div></foreignObject><text x="43" y="89" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">public:...</text></switch></g></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-17"><g><rect x="357" y="180" width="120" height="60" rx="9" ry="9" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 210px; margin-left: 358px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">StatusPrinter</div></div></div></foreignObject><text x="417" y="214" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">StatusPrinter</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-18"><g><path d="M 167 320 L 167 290 L 667 290 L 667 320" fill="#00cc00" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 204, 0), rgb(0, 162, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 167 320 L 167 480 L 667 480 L 667 320" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 167 320 L 667 320" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 498px; height: 1px; padding-top: 305px; margin-left: 168px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">class Battery</div></div></div></foreignObject><text x="417" y="309" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">class Battery</text></switch></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-19"><g><rect x="167" y="320" width="500" height="50" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 490px; height: 1px; padding-top: 345px; margin-left: 173px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 46px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>private:</div><div>    float capacity;  </div><div>    float currentCharge; </div></div></div></div></foreignObject><text x="173" y="349" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">private:...</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-20"><g><rect x="167" y="370" width="500" height="110" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 490px; height: 1px; padding-top: 425px; margin-left: 173px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 106px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>public:</div><div>    Battery(float capacity_value) : capacity(capacity_value), currentCharge(capacity_value) {}</div><div>    void ConsumedEnergy(float amount)<span style="background-color: transparent;">float GetRemainingBattery() const</span></div><div>    float GetRemainingBatteryPercentage() const </div><div>    float GetRemainingDistance(float consumptionRate) const</div><div>    void Recharge(float amount) </div><div>    bool IsBatteryLow() const </div></div></div></div></foreignObject><text x="173" y="429" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">public:...</text></switch></g></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-22"><g><path d="M 367 600 L 367 570 L 1157 570 L 1157 600" fill="#00cc00" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 204, 0), rgb(0, 162, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 367 600 L 367 750 L 1157 750 L 1157 600" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 367 600 L 1157 600" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="none" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 788px; height: 1px; padding-top: 585px; margin-left: 368px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">class VF5_EnergyManagementSystem</div></div></div></foreignObject><text x="762" y="589" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px" text-anchor="middle">class VF5_EnergyManagementSystem</text></switch></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-23"><g><rect x="367" y="600" width="790" height="80" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 780px; height: 1px; padding-top: 640px; margin-left: 373px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 76px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>private:</div><div>    Battery VF5_Battery;</div><div>    std::unique_ptr&lt;ModeEnergyConsumer&gt; VF5_CurrentMode; </div><div>    std::unique_ptr&lt;IPrintTable&gt; VF5_Printer; </div><div>    float distance =0;</div></div></div></div></foreignObject><text x="373" y="644" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">private:...</text></switch></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-24"><g><rect x="367" y="680" width="790" height="70" fill="#99ff99" stroke="#009900" pointer-events="all" style="fill: light-dark(rgb(153, 255, 153), rgb(0, 68, 0)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g><g><g><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 780px; height: 1px; padding-top: 715px; margin-left: 373px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 66px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>public:</div><div>    VF5_EnergyManagementSystem(float VF5_Battery_capacity, std::unique_ptr&lt;IPrintTable&gt; printer)</div><div>        : VF5_Battery(VF5_Battery_capacity), VF5_CurrentMode(std::make_unique&lt;normalMode&gt;()), VF5_Printer(std::move(printer)) {};</div><div><div>    void VF5_Drive(float SpeedKmH, float SecondsDuration, Environment env = Environment(TerrainType::Flat,25.0)) </div><div><span style="background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"> </span></div><div>        </div></div><div><br /></div></div></div></div></foreignObject><text x="373" y="719" fill="light-dark(#000000, #ffffff)" font-family="Helvetica" font-size="12px">public:...</text></switch></g></g></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-27"><g><path d="M 917 65 L 887.11 65 L 887.01 173.63" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 887 178.88 L 883.51 171.88 L 887.01 173.63 L 890.51 171.89 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-28"><g><path d="M 1227 65 L 1257.11 65 L 1257.11 173.63" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 1257.11 178.88 L 1253.61 171.88 L 1257.11 173.63 L 1260.61 171.88 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-29"><g><path d="M 1070.45 100.7 L 1070.44 140.11 L 1070.28 173.63" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 1070.26 178.88 L 1066.79 171.87 L 1070.28 173.63 L 1073.79 171.9 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-30"><g><path d="M 417 140 L 417.11 150.11 L 417.02 173.63" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 417 178.88 L 413.53 171.87 L 417.02 173.63 L 420.53 171.9 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-33"><g><path d="M 487.08 570 L 487.47 484.28" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 487.49 479.03 L 490.96 486.04 L 487.47 484.28 L 483.96 486.01 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-34"><g><path d="M 959.5 570 L 959.19 516.51" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 959.16 511.26 L 962.7 518.24 L 959.19 516.51 L 955.7 518.28 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-36"><g><path d="M 1157 640.11 L 1437.11 640.11 L 1437.11 25 L 1233.37 25" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 1228.12 25 L 1235.12 21.5 L 1233.37 25 L 1235.12 28.5 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g><g data-cell-id="yPnP6qVamKMCWSBkKlpN-39"><g><path d="M 367 640.11 L 7.11 640.11 L 7.11 19.22 L 29.87 19.19" fill="none" stroke="#009900" stroke-miterlimit="10" pointer-events="stroke" style="stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/><path d="M 35.12 19.18 L 28.13 22.69 L 29.87 19.19 L 28.12 15.69 Z" fill="#009900" stroke="#009900" stroke-miterlimit="10" pointer-events="all" style="fill: light-dark(rgb(0, 153, 0), rgb(50, 181, 50)); stroke: light-dark(rgb(0, 153, 0), rgb(50, 181, 50));"/></g></g></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>